# Test Template for Site Generator
# This is a minimal template for testing the deployment flow

terraform {
  required_version = ">= 1.5.0"
  
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = var.aws_region
  
  default_tags {
    tags = var.tags
  }
}

# S3 bucket for static website hosting
resource "aws_s3_bucket" "website" {
  bucket = "${var.site_name}-${var.environment}-website"
  
  tags = merge(var.tags, {
    Name        = "${var.site_name}-website"
    Template    = "test-template"
    Environment = var.environment
  })
}

# S3 bucket website configuration
resource "aws_s3_bucket_website_configuration" "website" {
  bucket = aws_s3_bucket.website.id

  index_document {
    suffix = "index.html"
  }

  error_document {
    key = "error.html"
  }
}

# S3 bucket public access configuration
resource "aws_s3_bucket_public_access_block" "website" {
  bucket = aws_s3_bucket.website.id

  block_public_acls       = false
  block_public_policy     = false
  ignore_public_acls      = false
  restrict_public_buckets = false
}

# S3 bucket policy for public read access
resource "aws_s3_bucket_policy" "website" {
  bucket = aws_s3_bucket.website.id
  depends_on = [aws_s3_bucket_public_access_block.website]

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Sid       = "PublicReadGetObject"
        Effect    = "Allow"
        Principal = "*"
        Action    = "s3:GetObject"
        Resource  = "${aws_s3_bucket.website.arn}/*"
      }
    ]
  })
}

# Upload a simple index.html file
resource "aws_s3_object" "index" {
  bucket       = aws_s3_bucket.website.id
  key          = "index.html"
  content_type = "text/html"
  
  content = <<EOF
<!DOCTYPE html>
<html>
<head>
    <title>${var.site_name}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; border-bottom: 2px solid #007acc; padding-bottom: 10px; }
        .info { background: #e8f4fd; padding: 20px; border-radius: 4px; margin: 20px 0; }
        .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ Site Generator Deployment Successful!</h1>
        
        <div class="info success">
            <h2>‚úÖ Deployment Details</h2>
            <p><strong>Site Name:</strong> ${var.site_name}</p>
            <p><strong>Environment:</strong> ${var.environment}</p>
            <p><strong>Template:</strong> test-template</p>
            <p><strong>Deployment ID:</strong> ${var.deployment_id}</p>
            <p><strong>Deployed At:</strong> ${timestamp()}</p>
        </div>
        
        <div class="info">
            <h2>üéØ What This Demonstrates</h2>
            <ul>
                <li>‚úÖ Site Generator platform triggered deployment</li>
                <li>‚úÖ GitHub Actions workflow executed Terraform</li>
                <li>‚úÖ AWS infrastructure provisioned successfully</li>
                <li>‚úÖ Website deployed and accessible</li>
                <li>‚úÖ End-to-end GitOps flow working</li>
            </ul>
        </div>
        
        <div class="info">
            <h2>üèóÔ∏è Infrastructure Created</h2>
            <ul>
                <li>S3 bucket for static website hosting</li>
                <li>S3 bucket policy for public access</li>
                <li>Website configuration</li>
                <li>This HTML file</li>
            </ul>
        </div>
        
        <p><em>This site was automatically generated by the Site Generator platform using GitOps best practices.</em></p>
    </div>
</body>
</html>
EOF

  tags = var.tags
}